# Configure terraform version
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

# Configure the AWS Provider
provider "aws" {
  region = "us-east-1"
}

#create vpc inside aws
resource "aws_vpc" "myvpc" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "MY-VPC"
  }
}

#create public subnet
resource "aws_subnet" "pubsub" {
  vpc_id     = aws_vpc.myvpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "ap-south-1a"

  tags = {
    Name = "MY-VPC-PU-SUB"
  }
}

#create private subnet
resource "aws_subnet" "prisub" {
  vpc_id     = aws_vpc.myvpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "ap-south-1a"
  
  tags = {
    Name = "MY-VPC-PRI-SUB"
  }
}

#create internet gateway
resource "aws_internet_gateway" "tigw" {
  vpc_id = aws_vpc.myvpc.id

  tags = {
    Name = "MY-VPC-IGW"
  }
}

#create public route table and attch it to integnet gateway
resource "aws_route_table" "pubrt" {
  vpc_id=aws_vpc_myvpc.id
  route{
    cidr_block="0.0.0.0/0"
    gateway_id=aws_internet_gateway.tigw.id
 }
  tags={
    Name="MY-VPC-PUB-RT"
  }
}


#Associate public route table with public subnet
resource "aws_route_table_association" "pubrtasso" {
  subnet_id      = aws_subnet.pubsub.id
  route_table_id = aws_route_table.pubrt.id
}

#create private route table and attcah with nat gateway
resource "aws_route_table" "prirt" {
  vpc_id=aws_vpc_myvpc.id
  route{
    cidr_block="0.0.0.0/0"
    gateway_id=aws_nat_gateway.tnat.id
 }
  tags={
    Name="MY-VPC-PRI-RT"
  }
}

#create elastic ip for natgateway
resource "aws_eip" "myeip" {
  vpc  =  true
}

#create natgateway
resource "aws_nat_gateway" "tnat" {
  allocation_id = aws_eip.myeip.id
  subnet_id = aws_subnet.public.id

  tags = {
    Name = "MY-VPC-NAT"
  }
}

#Associate private subnet with private route table
resource "aws_route_table_association" "prirtasso" {
  subnet_id      = aws_subnet.prisub.id
  route_table_id = aws_route_table.prirt.id
}


#create security group
resource "aws_security_group" "allow_all" {
  name        = "allow_all"
  description = "Allow all inbound traffic and all outbound traffic"
  vpc_id      = aws_vpc.myvpc.id

  tags = {
    Name = "MY-VPC-SG"
  }
}

#create inbound rules for security group
resource "aws_vpc_security_group_ingress_rule" "allow_inbound" {
  security_group_id = aws_security_group.allow_all.id
  cidr_ipv4         = aws_vpc.main.cidr_block
  from_port         = 22
  ip_protocol       = "tcp"
  to_port           = 22
}

#create instance and attach it it public subnet
resource "aws_instance" "instance1" {
ami                          = "ami_0ad704c126371a549"
instance_type                = "t2.micro"
sunbet_id                    = aws_subnet.pubsub.id
vpc_security_group_dis       = [aws_security_group.allow_all.id]
key_name                     = "Laptopkey"
associate_public_ip_address  = true
}

#create instance and attach it it private subnet
resource "aws_instance" "instance2" {
ami                          = "ami_0ad704c126371a549"
instance_type                = "t2.micro"
sunbet_id                    = aws_subnet.prisub.id
vpc_security_group_dis       = [aws_security_group.allow_all.id]
key_name                     = "Laptopkey"

}